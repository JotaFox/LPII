package lp2g20.locadora;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Hashtable;


public class Locadora{

	private Hashtable <String, Cliente> cadastroCliente = new Hashtable <String, Cliente> ();
	private Hashtable <String, Filme> cadastroFilme = new Hashtable <String,Filme> (); 
	
	public Locadora(){
	}
	
	@SuppressWarnings("unchecked")
	public Locadora(String filme, String cliente) throws FileNotFoundException, IOException, ClassNotFoundException{
		
		ObjectInputStream arqCadastroDeFilmes = new ObjectInputStream(new FileInputStream(filme));
		this.cadastroFilme = (Hashtable <String, Filme>) arqCadastroDeFilmes.readObject();
		arqCadastroDeFilmes.close();
		
		ObjectInputStream arqCadastroDeClientes = new ObjectInputStream(new FileInputStream(cliente));
		this.cadastroCliente = (Hashtable <String, Cliente>) arqCadastroDeClientes.readObject();
		arqCadastroDeClientes.close();
		
	}
	
	public void cadastraCliente(Cliente novoCliente){
		cadastroCliente.put(novoCliente.getCodigoCliente(), novoCliente);
	}
	
	public void cadastraFilme(Filme novoFilme){
		cadastroFilme.put(novoFilme.getCodigoFilme(), novoFilme);
	}
	
	public void salvaArquivo(String nomeDoArquivo) throws IOException{
		
		if(nomeDoArquivo.equals("filmes")){
			ObjectOutputStream arquivo = new ObjectOutputStream(new FileOutputStream(nomeDoArquivo + ".dat"));
			arquivo.writeObject(cadastroFilme);
			arquivo.close();
		}
		
		else if(nomeDoArquivo.equals("clientes")){
			ObjectOutputStream arquivo = new ObjectOutputStream(new FileOutputStream(nomeDoArquivo + ".dat"));
			arquivo.writeObject(cadastroCliente);
			arquivo.close();
		}
	}
	
	@SuppressWarnings("unchecked")
	public void leArquivo(String nomeDoArquivo) throws FileNotFoundException, IOException, ClassNotFoundException{
		
		if(nomeDoArquivo.equals("filmes.dat")){
			ObjectInputStream arquivo = new ObjectInputStream(new FileInputStream(nomeDoArquivo));
			this.cadastroFilme = (Hashtable <String, Filme>) arquivo.readObject();
			arquivo.close();
		}
		
		else if(nomeDoArquivo.equals("clientes.dat")){
			ObjectInputStream arquivo = new ObjectInputStream(new FileInputStream(nomeDoArquivo));
			this.cadastroCliente = (Hashtable <String, Cliente>) arquivo.readObject();
			arquivo.close();
		}					
	}
	

	public void alugaFilme(Cliente cliente, Filme filme) throws CopiaNaoDisponivelEx{
		
		Calendar calendario = Calendar.getInstance();
		DateFormat datform = DateFormat.getDateInstance(DateFormat.MEDIUM);	
		String dataDeLocacao = datform.format(calendario.getTime());
		calendario.add(Calendar.DAY_OF_MONTH, 7);
		String dataDeDevolucao = datform.format(calendario.getTime());
		
		filme.aluga();
		cliente.addFilmeHist(dataDeLocacao, dataDeDevolucao, filme.getCodigoFilme());
		System.out.println("Data de devolucao: " + dataDeDevolucao);
	}
	
	public String imprimeFilmes(){
		
		ArrayList<String> lista = new ArrayList<String>();
		String ordenados = "";
		
		for(Filme f : this.cadastroFilme.values()){
			lista.add(f.getTitulo());
		}
		
		Collections.sort(lista);
	
		for(int i = 0; i< lista.size(); i++){
			for(Filme f : this.cadastroFilme.values()){
				if(lista.get(i).equals(f.getTitulo())){
					ordenados += f.toString() + "\n";
					
					break;							
				}
			}
		}
		
		return ordenados;	
	}
	
	public String imprimeClientes(){
		
		ArrayList<String> lista = new ArrayList<String>();
		String ordenados = "";
		
		for(Cliente c : this.cadastroCliente.values()){
			lista.add(c.getNome());
		}
		
		Collections.sort(lista);
		
		for(int i = 0; i< lista.size(); i++){
			for(Cliente f : this.cadastroCliente.values()){
				if(lista.get(i).equals(f.getNome())){
					ordenados += f.toString() + "\n";
					break;							
				}
			}
		}
		return ordenados;	
	}

	public Filme getFilme(String cogido) throws FilmeNaoCadastrado{
		
		if(cadastroFilme.containsKey(cogido)){
			return cadastroFilme.get(cogido);
		}
		
		else{
			throw new FilmeNaoCadastrado();
		}		
	}

	public Cliente getCliente(String cogido) throws ClienteNaoCadastrado{
		
		if(cadastroCliente.containsKey(cogido)){
			return cadastroCliente.get(cogido);
		}
		
		else{
			throw new ClienteNaoCadastrado();
		}	
	}
	
	public Hashtable <String, Cliente> getCadastroCliente(){
		return this.cadastroCliente;
	}

	public Hashtable <String, Filme> getCadastroFilme(){
		return this.cadastroFilme;
	}
}